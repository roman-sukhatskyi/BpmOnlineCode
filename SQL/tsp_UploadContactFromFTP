IF OBJECT_ID('tsp_UploadBuyersFromFtp', 'P') IS NOT NULL
	DROP PROCEDURE [dbo].[tsp_UploadBuyersFromFtp]
GO

CREATE PROCEDURE [dbo].[tsp_UploadBuyersFromFtp]
@PathToBayersFile VARCHAR(250),
@Result BIT OUT
AS  
BEGIN
	IF NOT EXISTS(
		SELECT * FROM sys.objects WHERE Name = 'TempTableCsv'
	)
	BEGIN
		CREATE TABLE TempTableCsv 
		(
			MemberIdPL NVARCHAR(500), Surname NVARCHAR(500), 
			GivenName NVARCHAR(500), MiddleName  NVARCHAR(500), 
			Gender NVARCHAR(500), Birthday  NVARCHAR(500), 
			Phone NVARCHAR(250), Email NVARCHAR(250), 
			City NVARCHAR(500), Street NVARCHAR(500), 
			House NVARCHAR(500), Corps NVARCHAR(500), 
			Apartment NVARCHAR(500), NumberActingCard NVARCHAR(500), 
			StatusWriteoffBonuses NVARCHAR(500), StatusCard NVARCHAR(500), 
			DateRegistrationCard NVARCHAR(500), CardType NVARCHAR(500), 
			BalanceTrade NVARCHAR(500), AcceptanceEmailPl NVARCHAR(500), 
			AcceptanceSMSPl NVARCHAR(500), SymptomParticipationClub NVARCHAR(500), 
			AcceptanceSMSKm NVARCHAR(500), AcceptanceEmailKm NVARCHAR(500), 
			WalletBalance NVARCHAR(500)
		)
	END     

			DECLARE @ErrorMessage nvarchar(max)	

BEGIN TRY
  BEGIN TRAN
  	declare @sqlText nvarchar(1000) = N'
	  	BULK INSERT TempTableCsv
		FROM ' +  @PathToBayersFile + '
		WITH
		(
			CODEPAGE = ''ACP'',
			FIRSTROW = 2,
			FIELDTERMINATOR = '';'',  
			ROWTERMINATOR = ''\n'',
			TABLOCK
		)
	';
	exec(@sqlText)
	/*BEGIN
		BULK INSERT TempTableCsv
		FROM 'C:\temp\UnZipFiles\RUSH_Buyers_2017_03_18.csv'
		WITH
		(
			CODEPAGE = 'ACP',
			FIRSTROW = 2,
			FIELDTERMINATOR = ';',  
			ROWTERMINATOR = '\n',
			TABLOCK
		)
	END*/
  COMMIT
END TRY
BEGIN CATCH
    IF @@TRANCOUNT > 0 ROLLBACK
	SELECT ERROR_MESSAGE() AS ErrorMessage;
	SET @ErrorMessage = ERROR_MESSAGE()
	INSERT INTO UsrIntegrationLogFtp (UsrName, UsrErrorDescription) VALUES ('IntegrationContactFromFtp', @ErrorMessage)
END CATCH

BEGIN TRY
  BEGIN TRAN
	BEGIN
		INSERT INTO City (Id, Name)
		SELECT NEWID() AS Id, tmp.City AS Name
		FROM TempTableCsv AS tmp
		WHERE not tmp.City is null and not exists (SELECT 1 FROM City AS c WHERE c.Name = tmp.City)
		GROUP BY tmp.City
	END
  COMMIT
END TRY
BEGIN CATCH
    IF @@TRANCOUNT > 0 ROLLBACK
	SELECT ERROR_MESSAGE() AS ErrorMessage;
	SET @ErrorMessage = ERROR_MESSAGE()
	INSERT INTO UsrIntegrationLogFtp (UsrName, UsrErrorDescription) VALUES ('IntegrationContactFromFtp', @ErrorMessage)
END CATCH

BEGIN TRY
  BEGIN TRAN
	BEGIN
		INSERT INTO Contact (UsrMemberIdPL,
					Surname,
					GivenName,
					MiddleName,
					Name,
					GenderId,
					BirthDate,
					MobilePhone,
					Email,
					CityId,
					Address,
					UsrHouse,
					UsrCorps,
					UsrApartment,
					UsrNumberActiveCard,
					UsrStatusWriteoffBonusesId,
					UsrStatusCardId,
					UsrDateRegistrationCard,
					UsrCardTypeId,
					UsrBalanceTrade,
					UsrAcceptanceEmailPlId,
					UsrAcceptanceSMSPlId,
					UsrSymptomParticipationClub,
					UsrAcceptanceSMSKmId,
					UsrAcceptanceEmailKmId,
					UsrWalletBalance)

		SELECT  
			 IsNULL(TRY_CONVERT([nvarchar](250), tmp.MemberIdPL), ''),
			 IsNULL(TRY_CONVERT([nvarchar](250), tmp.Surname), ''),
			 IsNULL(TRY_CONVERT([nvarchar](250), tmp.GivenName), ''),
			 IsNULL(TRY_CONVERT([nvarchar](250), tmp.MiddleName), ''),
			 IsNULL(TRY_CONVERT([nvarchar](250), tmp.Surname + ' ' +  tmp.GivenName + ' ' + tmp.MiddleName), ''),
			 g.Id,
			 IsNULL(TRY_CONVERT([datetime2], tmp.Birthday), null),
			 IsNULL(TRY_CONVERT([nvarchar](250), tmp.Phone), ''),
			 IsNULL(TRY_CONVERT([nvarchar](250), tmp.Email), ''),
			 ci.Id,
			 IsNULL(TRY_CONVERT([nvarchar](500), tmp.Street), ''),
			 IsNULL(TRY_CONVERT([nvarchar](50), tmp.House), ''),
			 IsNULL(TRY_CONVERT([nvarchar](50), tmp.Corps), ''),
			 IsNULL(TRY_CONVERT([nvarchar](50), tmp.Apartment), ''),
			 IsNULL(TRY_CONVERT([nvarchar](250), tmp.NumberActingCard), ''),
			 swb.Id,
			 sc.Id,
			 IsNULL(TRY_CONVERT([datetime2], tmp.DateRegistrationCard), null),
			 ct.Id,
			 IsNULL(TRY_CONVERT([decimal](20, 2), tmp.BalanceTrade), 0.00),
			 ase.Id,
			 ass.Id, 
			 IsNULL(TRY_CONVERT([bit], tmp.SymptomParticipationClub), 0),
			 aek.Id,
			 ask.Id,
			 IsNULL(TRY_CONVERT([decimal](20, 2), tmp.WalletBalance), 0.00)
		FROM TempTableCsv AS tmp
			left join Gender AS g with (nolock) ON g.UsrCode = TRY_CONVERT([int], tmp.Gender) 
			left join City AS ci with (nolock) ON ci.Name = TRY_CONVERT([nvarchar], tmp.City)
			left join UsrStatusWriteoffBonuses AS swb with (nolock) ON swb.UsrCodeId = TRY_CONVERT([int], tmp.StatusWriteoffBonuses)
			left join UsrStatusCard AS sc with (nolock) ON sc.UsrCodeId = TRY_CONVERT([int], tmp.StatusCard)
			left join UsrCardType AS ct with (nolock) ON ct.UsrCodeId =  TRY_CONVERT([int], tmp.CardType)
			left join UsrAcceptanceSendingEmail AS ase with (nolock) ON ase.UsrCodeId =  TRY_CONVERT([int], tmp.AcceptanceEmailPl)
			left join UsrAcceptanceSendingSMS AS ass with (nolock) ON ass.UsrCodeId =  TRY_CONVERT([int], tmp.AcceptanceSMSPl)
			left join UsrAcceptanceSendingEmail AS ask with (nolock) ON ask.UsrCodeId = TRY_CONVERT([int], tmp.AcceptanceSMSKm)
			left join UsrAcceptanceSendingSMS AS aek with (nolock) ON aek.UsrCodeId = TRY_CONVERT([int], tmp.AcceptanceEmailKm)
		WHERE  ISNUMERIC(tmp.MemberIdPL) = 1 AND not exists (select 1 from Contact as c where c.UsrMemberIdPL = TRY_CONVERT([nvarchar], tmp.MemberIdPL))
	END
  COMMIT
END TRY
BEGIN CATCH
    IF @@TRANCOUNT > 0 ROLLBACK
	SELECT ERROR_MESSAGE() AS ErrorMessage;
	SET @ErrorMessage = ERROR_MESSAGE()
	INSERT INTO UsrIntegrationLogFtp (UsrName, UsrErrorDescription) VALUES ('IntegrationContactFromFtp', @ErrorMessage)
END CATCH
	--BEGIN
	--	UPDATE c SET c.Surname = IsNULL(TRY_CONVERT([nvarchar](250), tmp.Surname), ''),
	--		 c.GivenName = IsNULL(TRY_CONVERT([nvarchar](250), tmp.GivenName), ''),
	--		 c.MiddleName = IsNULL(TRY_CONVERT([nvarchar](250), tmp.MiddleName), ''),
	--		 c.Name = IsNULL(TRY_CONVERT([nvarchar](250), tmp.Surname + ' ' +  tmp.GivenName + ' ' + tmp.MiddleName), ''),
	--		 c.GenderId = g.Id,
	--		 c.BirthDate = IsNULL(TRY_CONVERT([datetime2], tmp.Birthday), null),
	--		 c.MobilePhone = IsNULL(TRY_CONVERT([nvarchar](250), tmp.Phone), ''),
	--		 c.Email = IsNULL(TRY_CONVERT([nvarchar](250), tmp.Email), ''),
	--		 c.CityId = ci.Id,
	--		 c.Address = IsNULL(TRY_CONVERT([nvarchar](500), tmp.Street), ''),
	--		 c.UsrHouse = IsNULL(TRY_CONVERT([nvarchar](50), tmp.House), ''),
	--		 c.UsrCorps = IsNULL(TRY_CONVERT([nvarchar](50), tmp.Corps), ''),
	--		 c.UsrApartment = IsNULL(TRY_CONVERT([nvarchar](50), tmp.Apartment), ''),
	--		 c.UsrNumberActiveCard = IsNULL(TRY_CONVERT([decimal](18, 2), tmp.NumberActingCard), 0.00),
	--		 c.UsrStatusWriteoffBonusesId = swb.Id,
	--		 c.UsrStatusCardId = sc.Id,
	--		 c.UsrDateRegistrationCard = IsNULL(TRY_CONVERT([datetime2], tmp.DateRegistrationCard), null),
	--		 c.UsrCardTypeId = ct.Id,
	--		 c.UsrBalanceTrade =   IsNULL(TRY_CONVERT([decimal](20, 2), tmp.BalanceTrade), 0.00),
	--		 c.UsrAcceptanceEmailPlId = ase.Id,
	--		 c.UsrAcceptanceSMSPlId = ass.Id,
	--		 c.UsrSymptomParticipationClub = IsNULL(TRY_CONVERT([bit], tmp.SymptomParticipationClub), 0),
	--		 c.UsrAcceptanceSMSKmId =  aek.Id,
	--		 c.UsrAcceptanceEmailKmId = ask.Id,
	--		 c.UsrWalletBalance =  IsNULL(TRY_CONVERT([decimal](20, 2), tmp.WalletBalance), 0.00)
	--	FROM Contact AS c
	--		inner join TempTableCsv AS tmp ON tmp.MemberIdPL = TRY_CONVERT([nvarchar], tmp.MemberIdPL)
	--		left join Gender AS g with (nolock) ON g.UsrCode = TRY_CONVERT([int], tmp.Gender) 
	--		left join City AS ci with (nolock) ON ci.Name = TRY_CONVERT([nvarchar], tmp.City)
	--		left join UsrStatusWriteoffBonuses AS swb with (nolock) ON swb.UsrCodeId = TRY_CONVERT([int], tmp.StatusWriteoffBonuses)
	--		left join UsrStatusCard AS sc with (nolock) ON sc.UsrCodeId = TRY_CONVERT([int], tmp.StatusCard)
	--		left join UsrCardType AS ct with (nolock) ON ct.UsrCodeId =  TRY_CONVERT([int], tmp.CardType)
	--		left join UsrAcceptanceSendingEmail AS ase with (nolock) ON ase.UsrCodeId =  TRY_CONVERT([int], tmp.AcceptanceEmailPl)
	--		left join UsrAcceptanceSendingSMS AS ass with (nolock) ON ass.UsrCodeId =  TRY_CONVERT([int], tmp.AcceptanceSMSPl)
	--		left join UsrAcceptanceSendingEmail AS ask with (nolock) ON ask.UsrCodeId = TRY_CONVERT([int], tmp.AcceptanceSMSKm)
	--		left join UsrAcceptanceSendingSMS AS aek with (nolock) ON aek.UsrCodeId = TRY_CONVERT([int], tmp.AcceptanceEmailKm)
	--	WHERE c.Surname <> tmp.Surname OR
	--		  c.GivenName <> tmp.GivenName OR 
	--		  c.MiddleName <> tmp.MiddleName OR
	--		  c.GenderId <> g.Id OR
	--		  c.BirthDate <> tmp.Birthday OR
	--		  c.MobilePhone <> tmp.Phone OR
	--		  c.Email <> tmp.Email OR
	--		  c.CityId <> ci.Id OR 
	--		  c.Address <> tmp.Street OR
	--		  c.UsrHouse <> tmp.House OR
	--		  c.UsrCorps <> tmp.Corps OR
	--		  c.UsrApartment <> tmp.Apartment OR
	--		  c.UsrNumberActiveCard <> tmp.NumberActingCard OR
	--		  c.UsrStatusWriteoffBonusesId <> swb.Id OR 
	--		  c.UsrStatusCardId <> sc.Id OR
	--		  c.UsrDateRegistrationCard <> tmp.DateRegistrationCard OR 
	--		  c.UsrCardTypeId <> ct.Id OR 
	--		  c.UsrBalanceTrade <> tmp.BalanceTrade OR
	--		  c.UsrAcceptanceEmailPlId <> ase.Id OR
	--		  c.UsrAcceptanceSMSPlId <> ass.Id OR 
	--		  c.UsrSymptomParticipationClub <> tmp.SymptomParticipationClub OR
	--		  c.UsrAcceptanceSMSKmId <> aek.Id OR
	--		  c.UsrAcceptanceEmailKmId <> ask.Id OR
	--		  c.UsrWalletBalance <> tmp.WalletBalance
	--END
    
	BEGIN
		TRUNCATE TABLE TempTableCsv
		DROP TABLE TempTableCsv 
	END
	
	BEGIN
		SELECT c.MobilePhone AS Number, 'D4A2DC80-30CA-DF11-9B2A-001D60E938C6' AS TypeId, c.Id AS ContactId 
		FROM Contact c
		WHERE not exists (SELECT TOP 1 * FROM ContactCommunication cc WHERE cc.ContactId = c.Id and cc.Number != c.MobilePhone) and c.MobilePhone != '' 
		UNION ALL
		SELECT c.Email AS Number, 'EE1C85C3-CFCB-DF11-9B2A-001D60E938C6' AS TypeId, c.Id AS ContactId 
		FROM Contact c
		WHERE not exists (SELECT TOP 1 * FROM ContactCommunication cc WHERE cc.ContactId = c.Id and cc.Number != c.Email) and c.Email != '' 
	END
	
	BEGIN
		SET @Result = 1;
		RETURN;
	END
END
GO 
